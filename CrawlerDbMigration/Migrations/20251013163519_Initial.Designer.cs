// <auto-generated />
using System;
using CrawlerDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CrawlerDbMigration.Migrations
{
    [DbContext(typeof(CrawlerDbContext))]
    [Migration("20251013163519_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CrawlerDb.Models.Batch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchId"));

                    b.Property<bool>("AutoCreateNextPart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("BatchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsOpen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("BatchId");

                    b.HasIndex("BatchName")
                        .IsUnique();

                    b.ToTable("Batches");
                });

            modelBuilder.Entity("CrawlerDb.Models.BatchPart", b =>
                {
                    b.Property<int>("BpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BpId"));

                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Finished")
                        .HasColumnType("datetime");

                    b.HasKey("BpId");

                    b.HasIndex("BatchId", "Created")
                        .IsUnique();

                    b.ToTable("BatchParts");
                });

            modelBuilder.Entity("CrawlerDb.Models.ContentAnalysis", b =>
                {
                    b.Property<int>("CaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CaId"));

                    b.Property<int>("BatchPartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Finish")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastModifiedDateOnServer")
                        .HasColumnType("datetime");

                    b.Property<int>("ResponseStatusCode")
                        .HasColumnType("int");

                    b.Property<int>("UrlId")
                        .HasColumnType("int");

                    b.HasKey("CaId");

                    b.HasIndex("UrlId");

                    b.HasIndex("BatchPartId", "UrlId")
                        .IsUnique();

                    b.ToTable("ContentsAnalysis");
                });

            modelBuilder.Entity("CrawlerDb.Models.ExtensionModel", b =>
                {
                    b.Property<int>("ExtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtId"));

                    b.Property<string>("ExtName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ExtProhibited")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("ExtId");

                    b.HasIndex("ExtName")
                        .IsUnique();

                    b.ToTable("extensions", (string)null);
                });

            modelBuilder.Entity("CrawlerDb.Models.HostByBatch", b =>
                {
                    b.Property<int>("HbbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HbbId"));

                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<int>("HostId")
                        .HasColumnType("int");

                    b.Property<int>("SchemeId")
                        .HasColumnType("int");

                    b.HasKey("HbbId");

                    b.HasIndex("HostId");

                    b.HasIndex("SchemeId");

                    b.HasIndex("BatchId", "SchemeId", "HostId")
                        .IsUnique();

                    b.ToTable("hostsByBatches", (string)null);
                });

            modelBuilder.Entity("CrawlerDb.Models.HostModel", b =>
                {
                    b.Property<int>("HostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HostId"));

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasMaxLength(253)
                        .HasColumnType("nvarchar(253)");

                    b.Property<bool>("HostProhibited")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("HostId");

                    b.HasIndex("HostName")
                        .IsUnique();

                    b.ToTable("hosts", (string)null);
                });

            modelBuilder.Entity("CrawlerDb.Models.Robot", b =>
                {
                    b.Property<int>("RbtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RbtId"));

                    b.Property<int>("BatchPartId")
                        .HasColumnType("int");

                    b.Property<int>("HostId")
                        .HasColumnType("int");

                    b.Property<string>("RobotsTxt")
                        .HasColumnType("ntext");

                    b.Property<int>("SchemeId")
                        .HasColumnType("int");

                    b.HasKey("RbtId");

                    b.HasIndex("HostId");

                    b.HasIndex("SchemeId");

                    b.HasIndex("BatchPartId", "SchemeId", "HostId")
                        .IsUnique();

                    b.ToTable("robots", (string)null);
                });

            modelBuilder.Entity("CrawlerDb.Models.SchemeModel", b =>
                {
                    b.Property<int>("SchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchId"));

                    b.Property<string>("SchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("SchProhibited")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("SchId");

                    b.HasIndex("SchName")
                        .IsUnique();

                    b.ToTable("schemes", (string)null);
                });

            modelBuilder.Entity("CrawlerDb.Models.Term", b =>
                {
                    b.Property<int>("TrmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrmId"));

                    b.Property<string>("TermText")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TermTypeId")
                        .HasColumnType("int")
                        .HasColumnName("termTypeId");

                    b.HasKey("TrmId");

                    b.HasIndex("TermText");

                    b.HasIndex("TermTypeId");

                    b.ToTable("terms", (string)null);
                });

            modelBuilder.Entity("CrawlerDb.Models.TermByUrl", b =>
                {
                    b.Property<int>("TbuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TbuId"));

                    b.Property<int>("BatchPartId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("TermId")
                        .HasColumnType("int");

                    b.Property<int>("UrlId")
                        .HasColumnType("int");

                    b.HasKey("TbuId");

                    b.HasIndex("TermId");

                    b.HasIndex("UrlId");

                    b.HasIndex("BatchPartId", "UrlId", "Position")
                        .IsUnique();

                    b.ToTable("termsByUrls", (string)null);
                });

            modelBuilder.Entity("CrawlerDb.Models.TermType", b =>
                {
                    b.Property<int>("TtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TtId"));

                    b.Property<string>("TtKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TtName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TtId");

                    b.HasIndex("TtKey")
                        .IsUnique();

                    b.ToTable("termTypes", (string)null);
                });

            modelBuilder.Entity("CrawlerDb.Models.UrlGraphNode", b =>
                {
                    b.Property<int>("UgnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UgnId"));

                    b.Property<int>("BatchPartId")
                        .HasColumnType("int");

                    b.Property<int>("FromUrlId")
                        .HasColumnType("int");

                    b.Property<int>("GotUrlId")
                        .HasColumnType("int");

                    b.HasKey("UgnId");

                    b.HasIndex("FromUrlId");

                    b.HasIndex("GotUrlId");

                    b.HasIndex("BatchPartId", "FromUrlId", "GotUrlId")
                        .IsUnique();

                    b.ToTable("UrlGraphNodes");
                });

            modelBuilder.Entity("CrawlerDb.Models.UrlModel", b =>
                {
                    b.Property<int>("UrlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrlId"));

                    b.Property<int>("ExtensionId")
                        .HasColumnType("int");

                    b.Property<int>("HostId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsSiteMap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("SchemeId")
                        .HasColumnType("int");

                    b.Property<int>("UrlHashCode")
                        .HasColumnType("int");

                    b.Property<string>("UrlName")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("UrlId");

                    b.HasIndex("ExtensionId");

                    b.HasIndex("HostId");

                    b.HasIndex("SchemeId");

                    b.HasIndex("UrlHashCode", "HostId", "ExtensionId", "SchemeId");

                    b.ToTable("urls", (string)null);
                });

            modelBuilder.Entity("CrawlerDb.Models.BatchPart", b =>
                {
                    b.HasOne("CrawlerDb.Models.Batch", "BatchNavigation")
                        .WithMany("BatchParts")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BatchNavigation");
                });

            modelBuilder.Entity("CrawlerDb.Models.ContentAnalysis", b =>
                {
                    b.HasOne("CrawlerDb.Models.BatchPart", "BatchPartNavigation")
                        .WithMany("ContentsAnalysis")
                        .HasForeignKey("BatchPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrawlerDb.Models.UrlModel", "UrlNavigation")
                        .WithMany("ContentsAnalysis")
                        .HasForeignKey("UrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BatchPartNavigation");

                    b.Navigation("UrlNavigation");
                });

            modelBuilder.Entity("CrawlerDb.Models.HostByBatch", b =>
                {
                    b.HasOne("CrawlerDb.Models.Batch", "BatchNavigation")
                        .WithMany("HostsByBatches")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrawlerDb.Models.HostModel", "HostNavigation")
                        .WithMany("HostsByBatches")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrawlerDb.Models.SchemeModel", "SchemeNavigation")
                        .WithMany("HostsByBatches")
                        .HasForeignKey("SchemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BatchNavigation");

                    b.Navigation("HostNavigation");

                    b.Navigation("SchemeNavigation");
                });

            modelBuilder.Entity("CrawlerDb.Models.Robot", b =>
                {
                    b.HasOne("CrawlerDb.Models.BatchPart", "BatchPartNavigation")
                        .WithMany("Robots")
                        .HasForeignKey("BatchPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrawlerDb.Models.HostModel", "HostNavigation")
                        .WithMany("Robots")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrawlerDb.Models.SchemeModel", "SchemeNavigation")
                        .WithMany("Robots")
                        .HasForeignKey("SchemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BatchPartNavigation");

                    b.Navigation("HostNavigation");

                    b.Navigation("SchemeNavigation");
                });

            modelBuilder.Entity("CrawlerDb.Models.Term", b =>
                {
                    b.HasOne("CrawlerDb.Models.TermType", "TermTypeNavigation")
                        .WithMany("Terms")
                        .HasForeignKey("TermTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TermTypeNavigation");
                });

            modelBuilder.Entity("CrawlerDb.Models.TermByUrl", b =>
                {
                    b.HasOne("CrawlerDb.Models.BatchPart", "BatchPartNavigation")
                        .WithMany("TermsByUrls")
                        .HasForeignKey("BatchPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrawlerDb.Models.Term", "TermNavigation")
                        .WithMany("TermsByUrls")
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrawlerDb.Models.UrlModel", "UrlNavigation")
                        .WithMany("TermsByUrls")
                        .HasForeignKey("UrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BatchPartNavigation");

                    b.Navigation("TermNavigation");

                    b.Navigation("UrlNavigation");
                });

            modelBuilder.Entity("CrawlerDb.Models.UrlGraphNode", b =>
                {
                    b.HasOne("CrawlerDb.Models.BatchPart", "BatchPartNavigation")
                        .WithMany("UrlGraphNodes")
                        .HasForeignKey("BatchPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrawlerDb.Models.UrlModel", "FromUrlNavigation")
                        .WithMany("UrlGraphNodesFrom")
                        .HasForeignKey("FromUrlId")
                        .IsRequired();

                    b.HasOne("CrawlerDb.Models.UrlModel", "GotUrlNavigation")
                        .WithMany("UrlGraphNodesGot")
                        .HasForeignKey("GotUrlId")
                        .IsRequired();

                    b.Navigation("BatchPartNavigation");

                    b.Navigation("FromUrlNavigation");

                    b.Navigation("GotUrlNavigation");
                });

            modelBuilder.Entity("CrawlerDb.Models.UrlModel", b =>
                {
                    b.HasOne("CrawlerDb.Models.ExtensionModel", "ExtensionNavigation")
                        .WithMany("Urls")
                        .HasForeignKey("ExtensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrawlerDb.Models.HostModel", "HostNavigation")
                        .WithMany("Urls")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrawlerDb.Models.SchemeModel", "SchemeNavigation")
                        .WithMany("Urls")
                        .HasForeignKey("SchemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtensionNavigation");

                    b.Navigation("HostNavigation");

                    b.Navigation("SchemeNavigation");
                });

            modelBuilder.Entity("CrawlerDb.Models.Batch", b =>
                {
                    b.Navigation("BatchParts");

                    b.Navigation("HostsByBatches");
                });

            modelBuilder.Entity("CrawlerDb.Models.BatchPart", b =>
                {
                    b.Navigation("ContentsAnalysis");

                    b.Navigation("Robots");

                    b.Navigation("TermsByUrls");

                    b.Navigation("UrlGraphNodes");
                });

            modelBuilder.Entity("CrawlerDb.Models.ExtensionModel", b =>
                {
                    b.Navigation("Urls");
                });

            modelBuilder.Entity("CrawlerDb.Models.HostModel", b =>
                {
                    b.Navigation("HostsByBatches");

                    b.Navigation("Robots");

                    b.Navigation("Urls");
                });

            modelBuilder.Entity("CrawlerDb.Models.SchemeModel", b =>
                {
                    b.Navigation("HostsByBatches");

                    b.Navigation("Robots");

                    b.Navigation("Urls");
                });

            modelBuilder.Entity("CrawlerDb.Models.Term", b =>
                {
                    b.Navigation("TermsByUrls");
                });

            modelBuilder.Entity("CrawlerDb.Models.TermType", b =>
                {
                    b.Navigation("Terms");
                });

            modelBuilder.Entity("CrawlerDb.Models.UrlModel", b =>
                {
                    b.Navigation("ContentsAnalysis");

                    b.Navigation("TermsByUrls");

                    b.Navigation("UrlGraphNodesFrom");

                    b.Navigation("UrlGraphNodesGot");
                });
#pragma warning restore 612, 618
        }
    }
}
